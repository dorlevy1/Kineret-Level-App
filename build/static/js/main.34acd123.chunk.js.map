{"version":3,"sources":["components/Header/Header.js","components/chart/dataChart.js","store/actions.js","store/actionType.js","components/chart/chart.js","containers/Site/Site.js","App.js","serviceWorker.js","store/reducer.js","index.js","containers/Site/data.csv"],"names":["header","props","className","children","datas","datasets","label","yAxisID","fill","shows","lineTension","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","strokeColor","backgroundColor","checkbackgrounds","data","levels","options","maintainAspectRatio","scales","xAxes","display","gridLines","yAxes","animation","duration","tooltips","enabled","mode","legend","layout","padding","top","left","right","bottom","selectchart","labels","labelchart","checkBackground","setKineret","level","bgc","type","Chart","state","setChart","Line","value","start","Date","end","changeToPai","Bar","onChoosePie","defaultLabel","defaultLevel","setState","Pie","changeToLine","changeToBar","showFullYear","e","target","length","onShowFullYear","onInitDataKineret","handleChange","toLocaleDateString","day","year","month","replace","onshowBetweenDates","this","labelChart","labelPie","levelChart","levelPie","StrictMode","onClick","placeholder","onChange","format","style","textAlign","href","fontSize","PureComponent","connect","dispatch","d3","d","stringLevel","Kinneret_Level","toString","then","res","getRandomColor","color","i","Math","floor","random","index","el","check","Survey_Date","split","slice","concat","updatedArr","levelArr","map","lvl","splice","ele","filter","item","inputArray","indexOf","funcType","surDate","kineretDate","includes","f","l","newEnd","console","log","Site","Component","App","Boolean","window","location","hostname","match","initialState","reducer","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.34acd123.chunk.js","sourcesContent":["import React, { StrictMode } from 'react'\r\nimport './Header.css'\r\nconst header = props => {\r\n  return (\r\n    <div className='Bgc'>\r\n      <div className='Container'>\r\n        <StrictMode>{props.children}</StrictMode>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default header\r\n","import React from 'react'\r\nconst datas = props => {\r\n  let datasets = [\r\n    {\r\n      label: 'מי הכנרת',\r\n      yAxisID: 'y-axis-0',\r\n\r\n      fill: props.shows,\r\n      lineTension: 0.1,\r\n      borderColor: 'rgba(75,192,192,1)',\r\n      borderCapStyle: 'butt',\r\n      borderDash: [],\r\n      borderDashOffset: 0.0,\r\n      borderJoinStyle: 'miter',\r\n      pointBorderColor: 'rgba(75,192,192,1)',\r\n      pointBackgroundColor: '#fff',\r\n      pointBorderWidth: 1,\r\n      pointHoverRadius: 5,\r\n      pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n      pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n      pointHoverBorderWidth: 2,\r\n      pointRadius: 5,\r\n      pointHitRadius: 10,\r\n      strokeColor: 'rgba(151,187,205,1)',\r\n      backgroundColor: props.checkbackgrounds,\r\n      data: props.levels\r\n    }\r\n    // {\r\n    //   label: 'קו אדום תחתון',\r\n\r\n    //   fill: props.shows,\r\n    //   lineTension: 0.1,\r\n    //   borderColor: 'red',\r\n    //   borderCapStyle: 'butt',\r\n    //   borderDash: [],\r\n    //   borderDashOffset: 0.0,\r\n    //   borderJoinStyle: 'miter',\r\n    //   pointBorderColor: 'red',\r\n    //   pointBackgroundColor: '#fff',\r\n    //   pointBorderWidth: 1,\r\n    //   pointHoverRadius: 5,\r\n    //   pointHoverBackgroundColor: 'red',\r\n    //   pointHoverBorderColor: 'red',\r\n    //   pointHoverBorderWidth: 2,\r\n    //   pointRadius: 5,\r\n    //   pointHitRadius: 10,\r\n    //   strokeColor: 'red',\r\n    //   backgroundColor: 'red',\r\n    //   data: [-214.87]\r\n    // },\r\n    // {\r\n    //   label: 'קו אדום עליון',\r\n\r\n    //   fill: props.shows,\r\n    //   lineTension: 0.1,\r\n    //   borderColor: 'salmon',\r\n    //   borderCapStyle: 'butt',\r\n    //   borderDash: [],\r\n    //   borderDashOffset: 0.0,\r\n    //   borderJoinStyle: 'miter',\r\n    //   pointBorderColor: 'salmon',\r\n    //   pointBackgroundColor: '#fff',\r\n    //   pointBorderWidth: 1,\r\n    //   pointHoverRadius: 5,\r\n    //   pointHoverBackgroundColor: 'red',\r\n    //   pointHoverBorderColor: 'red',\r\n    //   pointHoverBorderWidth: 2,\r\n    //   pointRadius: 5,\r\n    //   pointHitRadius: 10,\r\n    //   strokeColor: 'salmon',\r\n    //   backgroundColor: 'salmon',\r\n    //   data: [-208.3]\r\n    // }\r\n  ]\r\n\r\n  let options = {\r\n    maintainAspectRatio: false,\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          display: props.shows,\r\n          gridLines: {\r\n            display: true\r\n          }\r\n        }\r\n      ],\r\n      yAxes: [\r\n        {\r\n          display: props.shows,\r\n          animation: {\r\n            duration: '1000'\r\n          },\r\n          gridLines: {\r\n            display: true\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    tooltips: {\r\n      enabled: true,\r\n      mode: 'label'\r\n    },\r\n    legend: {\r\n      display: true\r\n    },\r\n\r\n    layout: {\r\n      padding: {\r\n        top: 20,\r\n        left: 5,\r\n        right: 5,\r\n        bottom: 25\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <props.selectchart\r\n      data={{\r\n        labels: props.labelchart,\r\n        borderColor: '#fffff',\r\n        checkBackground: props.checkbackgrounds,\r\n        datasets: datasets\r\n      }}\r\n      options={options}\r\n    />\r\n  )\r\n}\r\n\r\nexport default datas\r\n","import * as actionType from './actionType'\r\nimport * as d3 from 'd3'\r\nimport data from '../containers/Site/data.csv'\r\n\r\nexport const setKineret = (label, level, bgc) => {\r\n  return {\r\n    type: actionType.SET_KINERET,\r\n    label: label,\r\n    level: level,\r\n    backgroundColor: bgc\r\n  }\r\n}\r\nexport const setBetweenDates = (label, level) => {\r\n  return {\r\n    type: actionType.CHOOSE_BETWEEN_DAY_TO_DAY,\r\n    label: label,\r\n    level: level\r\n  }\r\n}\r\n\r\nexport const setPie = (pieLabel, pieLevel) => {\r\n  return {\r\n    type: actionType.SET_PIE,\r\n    labelPie: pieLabel,\r\n    levelPie: pieLevel\r\n  }\r\n}\r\n\r\nexport const initKineret = () => {\r\n  return dispatch => {\r\n    const row = d => {\r\n      let stringLevel = d.Kinneret_Level.toString()\r\n      d.Kinneret_Level = stringLevel\r\n      return d\r\n    }\r\n\r\n    d3.csv(data, row).then(res => {\r\n      const getRandomColor = () => {\r\n        let letters = '0123456789ABCDEF'\r\n        let color = ''\r\n        for (var i = 0; i < 1; i++) {\r\n          color += letters[Math.floor(Math.random() * 16)]\r\n        }\r\n        return color\r\n      }\r\n      let label = []\r\n      let level = []\r\n      let bgc = []\r\n      for (let index = 0; index < res.length; index++) {\r\n        const el = res[index]\r\n        let check = res[index].Survey_Date.split('/')\r\n        check = check.slice(2).toString()\r\n        if (\r\n          el.Survey_Date === '01/1/' + check ||\r\n          el.Survey_Date === '01/4/' + check ||\r\n          el.Survey_Date === '01/7/' + check ||\r\n          el.Survey_Date === '01/12/' + check\r\n        ) {\r\n          label = label.concat(el.Survey_Date.toString().replace('01/', ''))\r\n          bgc = bgc.concat('#624e1' + getRandomColor().toString())\r\n          level = level.concat(el.Kinneret_Level)\r\n          dispatch(setKineret(label, level, bgc))\r\n        }\r\n      }\r\n      return true\r\n    }, [])\r\n  }\r\n}\r\nexport const pieSelector = (defaultLevel, defaultLabel) => {\r\n  let updatedArr = []\r\n  let levelArr = []\r\n  levelArr = defaultLabel.map(lvl => {\r\n    let level = lvl.split('.')\r\n    level = level.splice(0, 1).toString()\r\n    return level\r\n  })\r\n  updatedArr = defaultLevel.map(el => {\r\n    let ele = el.split('/')\r\n    ele = ele.splice(1).toString()\r\n    return ele\r\n  })\r\n  levelArr = levelArr.filter(function (item, index, inputArray) {\r\n    return inputArray.indexOf(item) === index\r\n  })\r\n  updatedArr = updatedArr.filter(function (item, index, inputArray) {\r\n    return inputArray.indexOf(item) === index\r\n  })\r\n  return setPie(updatedArr, levelArr)\r\n}\r\n\r\nexport const showFullYear = value => {\r\n  return dispatch => {\r\n    let surDate = []\r\n    let bgc = []\r\n    let kineretDate = []\r\n    const getRandomColor = () => {\r\n      let letters = '0123456789ABCDEF'\r\n      let color = ''\r\n      for (var i = 0; i < 1; i++) {\r\n        color += letters[Math.floor(Math.random() * 16)]\r\n      }\r\n      return color\r\n    }\r\n    d3.csv(data).then(res => {\r\n      for (let index = 0; index < res.length; index++) {\r\n        if (res[index].Survey_Date.includes(value)) {\r\n          surDate = surDate.concat(res[index].Survey_Date)\r\n          kineretDate = kineretDate.concat(res[index].Kinneret_Level)\r\n          bgc = bgc.concat('#624e1' + getRandomColor().toString())\r\n\r\n          dispatch(setKineret(surDate, kineretDate, bgc))\r\n        }\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const chooseRangeDate = (start, end) => {\r\n  return dispatch => {\r\n    let f = []\r\n    let l = []\r\n    d3.csv(data).then(res => {\r\n      for (let index = 0; index < res.length; index++) {\r\n        if (end[0].end !== null) {\r\n          let newEnd = end[0].end\r\n            .toLocaleDateString('he-IL', {\r\n              day: '2-digit',\r\n              year: 'numeric',\r\n              month: 'numeric'\r\n            })\r\n            .replace('.', '/')\r\n            .replace('.', '/')\r\n          if (\r\n            res[index].Survey_Date === start ||\r\n            res[index].Survey_Date === newEnd\r\n          ) {\r\n            l = l.concat(res[index].Kinneret_Level)\r\n            f = f.concat(res[index].Survey_Date)\r\n            console.log(f)\r\n            dispatch(setKineret(f, l, '#000050'))\r\n          }\r\n        }\r\n      }\r\n    })\r\n  }\r\n}\r\n","export const CHOOSE_YEAR = 'CHOOSE_YEAR'\r\nexport const CHOOSE_DAYS_IN_MONTH_CHOSEN_YEAR =\r\n  'CHOOSE_DAYS_IN_MONTH_CHOSEN_YEAR'\r\nexport const CHOOSE_BETWEEN_DAY_TO_DAY = 'CHOOSE_BETWEEN_DAY_TO_DAY'\r\nexport const SET_KINERET = 'SET_KINERET'\r\nexport const SET_PIE = 'SET_PIE'\r\n","import React, { PureComponent } from 'react'\r\nimport { Bar, Line, Pie } from 'react-chartjs-2'\r\nimport { connect } from 'react-redux'\r\nimport { DateRangePicker } from '@progress/kendo-react-dateinputs'\r\n\r\nimport Datas from './dataChart'\r\nimport '@progress/kendo-theme-default/dist/all.css'\r\nimport './chart.css'\r\nimport * as funcType from '../../store/index'\r\nclass Chart extends PureComponent {\r\n  state = {\r\n    setChart: Line,\r\n    value: {\r\n      start: new Date(),\r\n      end: new Date()\r\n    }\r\n  }\r\n  componentWillMount () {\r\n    this.props.onInitDataKineret()\r\n  }\r\n\r\n  changeToPai = () => {\r\n    if (this.state.setChart === Line || this.state.setChart === Bar) {\r\n      this.props.onChoosePie(this.props.defaultLabel, this.props.defaultLevel)\r\n      this.setState({\r\n        setChart: Pie\r\n      })\r\n    }\r\n  }\r\n  changeToLine = () => {\r\n    if (this.state.setChart === Bar || this.state.setChart === Pie) {\r\n      this.setState({ setChart: Line })\r\n    }\r\n  }\r\n  changeToBar = () => {\r\n    if (this.state.setChart === Line || this.state.setChart === Pie) {\r\n      this.setState({ setChart: Bar })\r\n    }\r\n  }\r\n  showFullYear = e => {\r\n    if (e.target.value.length > 3) {\r\n      this.props.onShowFullYear(e.target.value)\r\n    }\r\n    if (e.target.value.length < 1) {\r\n      this.props.onInitDataKineret()\r\n    }\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({ value: e.target.value })\r\n    let start = [e.target.value]\r\n    let end = [e.target.value]\r\n    start = start[0].start\r\n      .toLocaleDateString('he-IL', {\r\n        day: '2-digit',\r\n        year: 'numeric',\r\n        month: 'numeric'\r\n      })\r\n      .replace('.', '/')\r\n      .replace('.', '/')\r\n    this.props.onshowBetweenDates(start, end)\r\n  }\r\n\r\n  render () {\r\n    let labelChart =\r\n      this.state.setChart === Pie\r\n        ? this.props.labelPie\r\n        : this.props.defaultLabel\r\n    let levelChart =\r\n      this.state.setChart === Pie\r\n        ? this.props.levelPie\r\n        : this.props.defaultLevel\r\n    let checkBackground =\r\n      this.state.setChart === Line ? '#824e1e3b' : this.props.bgc\r\n    let display = this.state.setChart === Pie ? false : true\r\n    return (\r\n      <React.StrictMode>\r\n        <div className='flex-row'>\r\n          <div className='align'>\r\n            <div className='wrapper-changing'>\r\n              <div className='changing' onClick={this.changeToBar}>\r\n                Change To Bar\r\n              </div>\r\n              {/* <div className='changing' onClick={this.changeToPai}>\r\n              Change To Pie\r\n            </div> */}\r\n              <div className='changing' onClick={this.changeToLine}>\r\n                Change To Line\r\n              </div>\r\n\r\n              <div>\r\n                <input\r\n                  type='text'\r\n                  placeholder='Full Year information(2015, example)'\r\n                  onChange={e => this.showFullYear(e)}\r\n                />\r\n              </div>\r\n              <DateRangePicker\r\n                value={this.state.value}\r\n                format='dd.M.yyyy'\r\n                onChange={this.handleChange}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <Datas\r\n            shows={display}\r\n            checkbackgrounds={checkBackground}\r\n            labelchart={labelChart}\r\n            levels={levelChart}\r\n            selectchart={this.state.setChart}\r\n          />\r\n        </div>\r\n        <div style={{ textAlign: 'center' }}>\r\n          <h2>Created By Dor Dylan Levy </h2>\r\n          <h3>\r\n            <a href='http://dordl.com'>DORDL.COM</a>\r\n            <div style={{ fontSize: '16px' }}>\r\n              <p>Created with React / Redux</p>\r\n              <p>Rsuite / Chart-Js2</p>\r\n            </div>\r\n          </h3>\r\n        </div>\r\n      </React.StrictMode>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    defaultLabel: state.data.label,\r\n    labelPie: state.labelPie,\r\n    defaultLevel: state.data.level,\r\n    levelPie: state.levelPie,\r\n    bgc: state.backgroundColor\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onInitDataKineret: () => dispatch(funcType.initKineret()),\r\n    onChoosePie: (level, label) => dispatch(funcType.pieSelector(level, label)),\r\n    onShowFullYear: e => dispatch(funcType.showFullYear(e)),\r\n    onshowBetweenDates: (start, end) =>\r\n      dispatch(funcType.chooseRangeDate(start, end))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Chart)\r\n","import React, { StrictMode, Component } from 'react'\r\nimport Header from '../../components/Header/Header'\r\nimport Chart from '../../components/chart/chart'\r\n\r\nclass Site extends Component {\r\n  render () {\r\n    return (\r\n      <StrictMode>\r\n        <Header>\r\n          <Chart />\r\n        </Header>\r\n      </StrictMode>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Site\r\n","import React from 'react'\nimport './App.css'\nimport Site from './containers/Site/Site'\nfunction App () {\n  return (\n    <div>\n      <Site />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionType from './actionType'\r\nconst initialState = {\r\n  data: {\r\n    label: [],\r\n    level: []\r\n  },\r\n  backgroundColor: [],\r\n  labelPie: [],\r\n  levelPie: []\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionType.SET_KINERET:\r\n      return {\r\n        ...state,\r\n        data: {\r\n          ...state.data,\r\n          label: action.label,\r\n          level: action.level\r\n        },\r\n        backgroundColor: action.backgroundColor\r\n      }\r\n    case actionType.SET_PIE:\r\n      return {\r\n        ...state,\r\n        labelPie: action.labelPie,\r\n        levelPie: action.levelPie\r\n      }\r\n    case actionType.CHOOSE_BETWEEN_DAY_TO_DAY:\r\n      return {\r\n        ...state,\r\n        data: {\r\n          ...state.data,\r\n          label: action.label,\r\n          level: action.level\r\n        }\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer\r\n","import React, { StrictMode } from 'react'\nimport ReactDOM from 'react-dom'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport { Provider } from 'react-redux'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport reducer from './store/reducer'\nimport thunk from 'redux-thunk'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)))\n\nReactDOM.render(\n  <StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","module.exports = __webpack_public_path__ + \"static/media/data.b5cb9826.csv\";"],"sourceRoot":""}